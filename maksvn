#!/bin/sh

# maksvn script update source to svn and totally builds scribus
# has command line options for a really clean build, for creating diffs and for svn update
# has various inline options to edit to fit your environnement (cpu cores, choice of folders)
# and more options to build to a specific revision or to not update to svn
#!/bin/sh

# FIXED CHOOSEN BEHAVIOUR :
# folders and path to libraries can be set to user conveninence
# but sourcepath folder must contain both the 'svn' subfolder and the 'build' subfolder
# ('svn' receives svn repo clone, 'build' receive build objects)

# Set to user convenience
sourcepath=~/dev/scribus

# EDIT to fit your Qt install
# qtpath="~/dev/Qt/Qt5.3/5.3"
# qtpath="~/dev/Qt/Qt5.3.1/5.3"
qtpath="~/dev/Qt/Qt5.3.2/5.3"
qtfullpath=$qtpath/gcc_64

# Default could be execdirpath=~/bin 
# but so it got chances to be on SSD, it goes to /locabin
# EDIT to fit your exec folder
execdirpath=/localbin

# EDIT to fit your langage
mylang="fr;en-us"

# EDIT to fit your cpu cores = possible parallel processes
cores=8

# EDIT postfix for executable
# when suffix is 15svn, executable will be scribus15svn
suffix=15svn

# UNCOMMENT and EDIT if you wanna compile an old revision
# todo : specify as an commandline option
# revision=-r19507

# More options for make, including - (Ex : "-B")
usermakeopt=""

if [ "$revision" != "" ]
	then 
		echo
		echo "!!!! BUILD REVISION $revision !!!!"  
		echo
fi

if [ "$1" = "-?" ] || [ "$1" = "?" ] || [ "$1" = "-h" ] || [ "$1" = "h" ] || [ "$1" = "help" ] || [ "$1" = "-help" ]
    then 	help="-h"
fi

if test "$help" = "-h";
then
	echo
	echo "Usage : maksvn [-h]ou[-?] [-d]ou[clean] [-nomaj] [diff [dest]]"
	# echo "met à jour le source svn de la 1.5 et compile"
	echo "svn update the source and compile the 1.5"
	echo 
	echo === OPTIONS ====================
	echo "-h or -? display this help" 
	echo "-d or clean: Deletes previous build files (not the execs)" 
	echo "-noup or -nomaj : dont update to svn head"
	echo "diff or -diff : creates the diff file 'dest.diff' (or 'svnhead.diff' when no dest filename is specified)"
	echo === INFOS ======================
	svn info
	exit
fi

echo ================================

[ ! -d $execdirpath ] && mkdir $execdirpath
[ ! -d $execdirpath ] && echo "Error : exec folder '$execdirpath' does not exist. Create $execdirpath before launching maksvn" && exit

[ ! -d $sourcepath ] && mkdir $sourcepath
[ ! -d $sourcepath ] && echo "Error : source folder $sourcepath could not be created. Create it before launching maksvn" && exit

cd $sourcepath
[ ! -d build ] && mkdir build
[ ! -d build ] && echo "Error : build folder $sourcepath/build could not be created. Create it before launching maksvn" && exit
[ ! -d build/$suffix ] && mkdir build/$suffix
[ ! -d build/$suffix ] && echo "Error : build folder $sourcepath/build/$suffix could not be created. Create it before launching maksvn" && exit

# first svn checkout
if [ ! -d "svn" ]; 
then
	echo "Creating source folder and checkout svn files"
	svn co svn://scribus.net/trunk/Scribus svn
fi
[ ! -d "svn" ] && echo "Error : no svn folder could be created" &&	exit
cd svn
pwd

if [ "$1" = "diff" ] || [ "$1" = "-diff" ]
then
	if test "$2" = ""  
	then
		dest="svnhead.diff" 
	else dest="${2%.diff}.diff"
	fi
	
	# echo ok on va mettre le diff dans $dest
	echo Lets produce the diff in $dest
	destroot="$dest"
	dest="../$dest"

	if [ -f  $dest ]; 
	then
		# echo "Effacement de $dest" 
		echo "Deleting $dest" 
		rm $dest
	fi
	svn diff -x -u -x -w -x -b > $dest
	if [ -f $dest ]; 
	then
		cat $dest
		echo "===="
		# echo "Le diff a été mis dans $destroot"
		echo "The diff was produced in $destroot"
		geany $dest
	else
		# echo "! Le diff n'a PAS pu être mis dans $destroot !"
		# echo "$dest n'a pas pu être produit alors voici en direct : "
		echo "! The diff has NOT been put in $destroot !" 
		echo "$dest could not be produced so here live"
		echo "==== !"
		svn diff  -x -u -x -w -x -b
		echo "==== !"
	fi
	exit
fi

if [ "$1" = "-d" ] || [ "$1" = "d" ] || [ "$1" = "-clean" ] || [ "$1" = "clean" ] 
then 
	clean="-d"  
	shift
	echo
	echo "Deleting the foregoing build objects." 
	echo
#	sudo rm -rf $execdirpath/scribus$suffix/*
	sudo rm -rf $sourcepath/build/$suffix/*
	echo "$sourcepath/build/build$suffix was emptied --- it now contains :"
	ls $sourcepath/build/$suffix
	echo
	maketarget="clean"
fi

if [ "$1" = "-noup" ] || [ "$1" = "-nomaj" ]
then
	shift
	echo
	echo "NOT updating svn update"
	echo
else
	echo
	echo "Updating to svn $revision" 
	svn update $revision
	echo
fi

echo
echo ===
cd ../build/$suffix
pwd
echo cmake to $execdirpath/scribus$suffix with qtfullpath=$qtfullpath

#  -DCMAKE_EXE_LINKER_FLAGS="-lQt5Quick -lQt5PrintSupport"
# pour résoudre (?) :
# /usr/bin/ld: ne peut trouver -llibQt5PrintSupport
# ou
# /usr/bin/ld: CMakeFiles/scribus-1.5.0.svn.dir/ui/helpbrowser.cpp.o: référence au symbole non défini «_ZN12QPrintDialogC1EP8QPrinterP7QWidget»
# /home/jluc/dev/Qt/Qt5.3.2/5.3/gcc_64/lib/libQt5PrintSupport.so: error adding symbols: DSO missing from command line
echo cmake ../../svn -DCMAKE_INSTALL_PREFIX:PATH=$execdirpath/scribus$suffix  -DWANT_GUI_LANG="$mylang" -DWANT_VERSIONING=1 -DQT_PREFIX=$qtfullpath -DWANT_HUNSPELL=1 -DWANT_GRAPHICSMAGICK=1 -DWANT_SVNVERSION=1 -DCMAKE_EXE_LINKER_FLAGS='-lQt5Quick -lQt5PrintSupport'
cmake ../../svn -DCMAKE_INSTALL_PREFIX:PATH=$execdirpath/scribus$suffix  -DWANT_GUI_LANG="$mylang" -DWANT_VERSIONING=1 -DQT_PREFIX=$qtfullpath -DWANT_HUNSPELL=1 -DWANT_GRAPHICSMAGICK=1 -DWANT_SVNVERSION=1 -DCMAKE_EXE_LINKER_FLAGS='-lQt5Quick -lQt5PrintSupport'

echo
echo ===
echo make -j$cores $usermakeopt
make -j$cores $usermakeopt

echo
echo ===
echo make install
sudo make install

echo
echo ===

sudo unlink /usr/bin/scribus$suffix
sudo ln -s $execdirpath/scribus$suffix/bin/scribus-1.5.0.svn /usr/bin/scribus$suffix
echo exec is $execdirpath/scribus$suffix/bin/scribus-1.5.0.svn
echo Run with scribus$suffix
